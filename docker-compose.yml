volumes:
  pgdata:
    driver: local
  osm_archives:
    driver: local

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/setup_db.sql:/docker-entrypoint-initdb.d/setup_db.sql
    ports:
      - "5432:5432"
    env_file: .env
    environment:
      - PGDATA=/var/lib/postgresql/data
    command: ["postgres", "-c", "app.retention_period=${RETENTION_PERIOD}"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5

  api:
    build:
      context: .
      target: runtime
    volumes:
      - .:/app
      - ./osm_meet_your_mappers/static:/app/osm_meet_your_mappers/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      init_user_activity:
        condition: service_completed_successfully
    env_file: .env
    environment:
      - PYTHONPATH=/app

  backfill:
    build:
      context: .
      target: runtime
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      - PYTHONPATH=/app

  init_user_activity:
    build:
      context: .
      target: runtime
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      - PYTHONPATH=/app

  load_archives:
    build:
      context: .
      target: runtime
    working_dir: /app
    volumes:
      - .:/app
      - ${LOADER_CHANGESET_FILE}:/archives/changesets.osm.bz2
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - LOADER_CHANGESET_FILE=/archives/changesets.osm.bz2
    profiles:
      - load_archives
    command: ["python", "-m", "scripts.archive_loader"]
